"""changed all user.id into user.user_id

Revision ID: 195f6e7635ea
Revises: 3cc247e46bde
Create Date: 2024-03-21 01:25:31.186443

"""
from typing import Sequence, Union

import sqlalchemy as sa
import sqlmodel
from alembic import op
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = "195f6e7635ea"
down_revision: Union[str, None] = "3cc247e46bde"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("post_ibfk_1", "post", type_="foreignkey")
    op.alter_column(
        "post",
        "user_id",
        existing_type=mysql.INTEGER(display_width=11),
        type_=sqlmodel.sql.sqltypes.AutoString(),
        existing_nullable=True,
    )
    op.create_foreign_key(None, "post", "user", ["user_id"], ["user_id"])
    op.drop_constraint("service_ibfk_1", "service", type_="foreignkey")
    op.alter_column(
        "service",
        "user_id",
        existing_type=mysql.INTEGER(display_width=11),
        type_=sqlmodel.sql.sqltypes.AutoString(),
        nullable=True,
    )
    op.create_foreign_key(None, "service", "user", ["user_id"], ["user_id"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "service", type_="foreignkey")
    op.create_foreign_key("service_ibfk_1", "service", "user", ["user_id"], ["id"])
    op.alter_column(
        "service",
        "user_id",
        existing_type=sqlmodel.sql.sqltypes.AutoString(),
        type_=mysql.INTEGER(display_width=11),
        nullable=False,
    )
    op.drop_constraint(None, "post", type_="foreignkey")
    op.create_foreign_key("post_ibfk_1", "post", "user", ["user_id"], ["id"])
    op.alter_column(
        "post",
        "user_id",
        existing_type=sqlmodel.sql.sqltypes.AutoString(),
        type_=mysql.INTEGER(display_width=11),
        existing_nullable=True,
    )
    # ### end Alembic commands ###
